diff --git a/configure.ac b/configure.ac
index eaec907..128729f 100644
--- a/configure.ac
+++ b/configure.ac
@@ -658,6 +658,22 @@
 fi
 
 ####################################################################
+# Check if we should install nemo specific ontologies
+####################################################################
+
+AC_ARG_ENABLE(nemo,
+              AS_HELP_STRING([--enable-nemo],
+                             [enable nemo ontology [[default=no]]]),
+             [enable_nemo="$enableval"],
+             [enable_nemo=no])
+
+AM_CONDITIONAL(HAVE_NEMO, test "x$enable_nemo" = "xyes")
+
+if test "x$enable_nemo" = "xyes" ; then
+   AC_DEFINE(HAVE_NEMO, 1, [Define if we enable Nemo specific features])
+fi
+
+####################################################################
 # Check if we should disable the journal
 ####################################################################
 
@@ -2545,6 +2561,7 @@
 Frameworks / Options:
 
 	Support Maemo                           $enable_maemo
+	Support Nemo                            $enable_nemo
 	Support libmeegotouch                   $have_meegotouch
 	Support Guaranteed Metadata             $enable_guarantee_metadata (e.g. guess nie:title from files)
 
diff --git a/data/ontologies/94-nemo.description b/data/ontologies/94-nemo.description
new file mode 100644
index 0000000..57a72a4
--- /dev/null
+++ b/data/ontologies/94-nemo.description
@@ -0,0 +1,13 @@
+@prefix dsc: <http://www.tracker-project.org/temp/dsc#> .
+
+<virtual-ontology-uri:94-nemo.ontology> a dsc:Ontology ;
+	dsc:title "Nemo-specific classes" ;
+	dsc:description "Some nemo specific properties" ;
+
+	dsc:author "Nemo developers" ;
+	dsc:editor "Nemo developers" ;
+	dsc:gitlog "http://git.gnome.org/cgit/tracker/log/data/ontologies/94-nemo.ontology";
+
+	dsc:localPrefix "nemo" ;
+	dsc:baseUrl "http://www.nemomobile.org/ontologies/tracker#" ;
+	dsc:relativePath "./94-nemo.ontology" .
diff --git a/data/ontologies/94-nemo.ontology b/data/ontologies/94-nemo.ontology
new file mode 100644
index 0000000..87586e4
--- /dev/null
+++ b/data/ontologies/94-nemo.ontology
@@ -0,0 +1,24 @@
+@prefix fts: <http://www.tracker-project.org/ontologies/fts#> .
+@prefix nao: <http://www.semanticdesktop.org/ontologies/2007/08/15/nao#> .
+@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
+@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
+@prefix tracker: <http://www.tracker-project.org/ontologies/tracker#> .
+@prefix nco: <http://www.semanticdesktop.org/ontologies/2007/03/22/nco#> .
+@prefix nie: <http://www.semanticdesktop.org/ontologies/2007/01/19/nie#> .
+@prefix nfo: <http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#> .
+@prefix nrl: <http://www.semanticdesktop.org/ontologies/2007/08/15/nrl#> .
+@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
+@prefix nemo: <http://www.nemomobile.org/ontologies/tracker#> .
+@prefix nmm: <http://www.tracker-project.org/temp/nmm#> .
+
+nemo: a tracker:Namespace, tracker:Ontology ;
+	tracker:prefix "nemo" ;
+	nao:lastModified "2013-11-25T13:43:00Z" .
+
+
+nemo:isMediaArt a rdf:Property ;
+	nrl:maxCardinality 1 ;
+	rdfs:domain nmm:Photo ;
+	rdfs:range  xsd:boolean .
+
+
diff --git a/data/ontologies/Makefile.am b/data/ontologies/Makefile.am
index 63ddbd2..7a20b6a 100644
--- a/data/ontologies/Makefile.am
+++ b/data/ontologies/Makefile.am
@@ -3,6 +3,9 @@
 maemo_ontology =                                       \
 	91-maemo.ontology   91-maemo.description
 
+nemo_ontology =                                        \
+        94-nemo.ontology    94-nemo.description
+
 configdir = $(datadir)/tracker/ontologies
 
 config_DATA =                                          \
@@ -32,7 +35,14 @@
 	$(maemo_ontology)
 endif
 
+if HAVE_NEMO
+config_DATA +=                                         \
+	$(nemo_ontology)
+endif
+
+
 EXTRA_DIST =                                           \
 	$(maemo_ontology)                              \
+	$(nemo_ontology)                               \
 	$(config_DATA)
 
diff --git a/src/tracker-extract/tracker-extract-jpeg.c b/src/tracker-extract/tracker-extract-jpeg.c
index 0cb0139..ae60525 100644
--- a/src/tracker-extract/tracker-extract-jpeg.c
+++ b/src/tracker-extract/tracker-extract-jpeg.c
@@ -34,6 +34,7 @@
 #include <libtracker-sparql/tracker-sparql.h>
 
 #include "tracker-main.h"
+#include "tracker-media-art.h"
 
 #define CM_TO_INCH              0.393700787
 
@@ -170,9 +171,9 @@
 	}
 
 	f = tracker_file_open (filename);
-	g_free (filename);
 
 	if (!f) {
+		g_free (filename);
 		return FALSE;
 	}
 
@@ -788,6 +789,13 @@
 		tracker_sparql_builder_object_double (metadata, value);
 	}
 
+#if HAVE_NEMO
+	if (tracker_media_art_ismarked (filename)) {
+		tracker_sparql_builder_predicate (metadata, "nemo:isMediaArt");
+		tracker_sparql_builder_object_boolean (metadata, TRUE);
+	}
+#endif
+
 	jpeg_destroy_decompress (&cinfo);
 
 	tracker_exif_free (ed);
@@ -796,6 +804,7 @@
 	g_free (comment);
 
 fail:
+	g_free (filename);
 	tracker_file_close (f, FALSE);
 	g_free (uri);
 
diff --git a/src/tracker-extract/tracker-extract-png.c b/src/tracker-extract/tracker-extract-png.c
index eea147f..744af45 100644
--- a/src/tracker-extract/tracker-extract-png.c
+++ b/src/tracker-extract/tracker-extract-png.c
@@ -30,6 +30,8 @@
 #include <libtracker-common/tracker-date-time.h>
 #include <libtracker-extract/tracker-extract.h>
 
+#include "tracker-media-art.h"
+
 #define RFC1123_DATE_FORMAT "%d %B %Y %H:%M:%S %z"
 #define CM_TO_INCH          0.393700787
 
@@ -809,9 +811,9 @@
 	}
 
 	f = tracker_file_open (filename);
-	g_free (filename);
 
 	if (!f) {
+		g_free (filename);
 		return FALSE;
 	}
 
@@ -821,6 +823,7 @@
 	                                  NULL);
 	if (!png_ptr) {
 		tracker_file_close (f, FALSE);
+		g_free (filename);
 		return FALSE;
 	}
 
@@ -828,6 +831,7 @@
 	if (!info_ptr) {
 		png_destroy_read_struct (&png_ptr, &info_ptr, NULL);
 		tracker_file_close (f, FALSE);
+		g_free (filename);
 		return FALSE;
 	}
 
@@ -835,12 +839,14 @@
 	if (!end_ptr) {
 		png_destroy_read_struct (&png_ptr, &info_ptr, NULL);
 		tracker_file_close (f, FALSE);
+		g_free (filename);
 		return FALSE;
 	}
 
 	if (setjmp (png_jmpbuf (png_ptr))) {
 		png_destroy_read_struct (&png_ptr, &info_ptr, &end_ptr);
 		tracker_file_close (f, FALSE);
+		g_free (filename);
 		return FALSE;
 	}
 
@@ -858,6 +864,7 @@
 	                   &filter_type)) {
 		png_destroy_read_struct (&png_ptr, &info_ptr, &end_ptr);
 		tracker_file_close (f, FALSE);
+		g_free (filename);
 		return FALSE;
 	}
 
@@ -906,8 +913,16 @@
 		tracker_sparql_builder_object_string (metadata, dlna_mimetype);
 	}
 
+#if HAVE_NEMO
+	if (tracker_media_art_ismarked (filename)) {
+		tracker_sparql_builder_predicate (metadata, "nemo:isMediaArt");
+		tracker_sparql_builder_object_boolean (metadata, TRUE);
+	}
+#endif
+
 	png_destroy_read_struct (&png_ptr, &info_ptr, &end_ptr);
 	tracker_file_close (f, FALSE);
+	g_free (filename);
 
 	return TRUE;
 }
diff --git a/src/tracker-extract/tracker-media-art.c b/src/tracker-extract/tracker-media-art.c
index 7aa5f44..3762ddf 100644
--- a/src/tracker-extract/tracker-media-art.c
+++ b/src/tracker-extract/tracker-media-art.c
@@ -80,6 +80,9 @@
 static TrackerStorage *media_art_storage;
 static GHashTable *media_art_cache;
 static GDBusConnection *connection;
+#ifdef HAVE_NEMO
+static GHashTable *mark_table;
+#endif
 
 static void
 albumart_queue_cb (GObject      *source_object,
@@ -650,14 +653,24 @@
 			}
 
 			g_debug ("Album art (PNG) found in same directory being used:'%s'", art_file_path);
-			retval = convert_from_other_format (art_file_path, target, album_art_file_path, artist);
+				retval = convert_from_other_format (art_file_path, target, album_art_file_path, artist);
 		}
+
+#ifdef HAVE_NEMO
+		if (retval) {
+			g_hash_table_insert (mark_table,
+			                     g_strdup (art_file_path),
+			                     GINT_TO_POINTER(TRUE));
+			/*here*/ 
+		}
+#endif
 
 		g_free (art_file_path);
 		g_free (album_art_file_path);
 	}
 
-	g_free (target);
+
+	g_free (target);	
 	g_free (artist_stripped);
 	g_free (title_stripped);
 
@@ -952,6 +965,14 @@
 	                                         (GDestroyNotify) g_free,
 	                                         NULL);
 
+#ifdef HAVE_NEMO
+	/* Cache to know if we have already handled uris */
+	mark_table = g_hash_table_new_full (g_str_hash,
+	                                    g_str_equal,
+	                                    (GDestroyNotify) g_free,
+	                                    NULL);
+#endif
+
 	/* Signal handler for new album art from the extractor */
 	connection = g_bus_get_sync (G_BUS_TYPE_SESSION, NULL, &error);
 
@@ -980,6 +1001,11 @@
 		g_hash_table_unref (media_art_cache);
 	}
 
+#ifdef HAVE_NEMO
+	if (mark_table) {
+		g_hash_table_unref (mark_table);
+	}
+#endif
 	if (media_art_storage) {
 		g_object_unref (media_art_storage);
 	}
@@ -1127,3 +1153,46 @@
 
 	return processed;
 }
+
+#ifdef HAVE_NEMO
+gboolean tracker_media_art_ismarked (const char *filename)
+{
+	gboolean marked = (gboolean) g_hash_table_lookup (mark_table, filename);
+
+	if (!marked) {
+		gchar *file_name_strdown, *name_utf8 = g_filename_to_utf8 (filename, -1, NULL, NULL, NULL);
+
+		if (!name_utf8) {
+			g_debug ("Could not convert filename '%s' to UTF-8", filename);
+			return FALSE;
+		}
+
+		file_name_strdown = g_utf8_strdown (name_utf8, -1);
+
+		if (strstr (file_name_strdown, "cover") ||
+		    strstr (file_name_strdown, "front")) {
+			g_free (file_name_strdown);
+			g_free (name_utf8);
+			return TRUE;
+		}
+
+		if (strstr (file_name_strdown, "albumart")) {
+			if (strstr (file_name_strdown, "large")) {
+				g_free (file_name_strdown);
+				g_free (name_utf8);
+				return TRUE;
+			} else if (strstr (file_name_strdown, "small")) {
+				g_free (file_name_strdown);
+				g_free (name_utf8);
+				return TRUE;
+			}
+		}
+
+		g_free (file_name_strdown);
+		g_free (name_utf8);
+	}
+
+	return marked;
+}
+#endif
+
diff --git a/src/tracker-extract/tracker-media-art.h b/src/tracker-extract/tracker-media-art.h
index 980239a..c1a1db5 100644
--- a/src/tracker-extract/tracker-media-art.h
+++ b/src/tracker-extract/tracker-media-art.h
@@ -42,6 +42,10 @@
                                      const gchar         *title,
                                      const gchar         *uri);
 
+#if HAVE_NEMO
+gboolean tracker_media_art_ismarked (const char *filename);
+#endif
+
 G_END_DECLS
 
 #endif /* __TRACKER_EXTRACT_MEDIA_ART_H__ */
